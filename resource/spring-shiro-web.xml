<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- 缓存管理器 使用memcache实现-->
    <bean id="shiroCacheManager" class="com.zl.component.shiro.cache.SpringCacheManagerWrapper">
        <property name="cacheManager" ref="memcacheManager"/>
    </bean>
	 
	
    <!-- 凭证匹配器
    <bean id="credentialsMatcher" class="com.github.zhangkaitao.shiro.chapter12.credentials.RetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="cacheManager"/>
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>
 	-->
    <!-- Realm实现 -->
    <bean id="userRealm" class="com.meixun.b2b.mall.component.shiro.realm.UserRealm">
        <!--
        <property name="credentialsMatcher" ref="credentialsMatcher"/> -->
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>

    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话Cookie模板-->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>
 
  <!-- 会话DAO  -->
 	<bean name="memcachedClient" class="com.zl.util.MemcachedUtils" factory-method="getInstance"></bean>
   
    <bean id="sessionDAO" class="com.meixun.b2b.mall.component.shiro.dao.ShiroSessionDao">
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <!-- 会话验证调度器 -->
    <!-- <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler2">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean> -->
    
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="3600000"/>
        <property name="deleteInvalidSessions" value="true"/>
         <!-- 会话管理器 -->
        <!-- <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/> -->
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>
 
    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <!----> <property name="cacheManager" ref="shiroCacheManager"/> 
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- 基于Form表单的身份验证过滤器	-->
    <bean id="securityFilter" class="com.meixun.b2b.mall.component.shiro.filter.SecurityFilter"></bean>
 	
 	
 	
 	<bean id="filterChainManager" class="com.meixun.b2b.mall.component.shiro.chain.CustomDefaultFilterChainManager">
        <property name="loginUrl" value="/common/login"/>
        <property name="successUrl" value="/user/index"/>
        <property name="unauthorizedUrl" value="/unauthorized.jsp"/>

        <property name="customFilters">
            <util:map>
                <entry key="security" value-ref="securityFilter"/>
            </util:map>
        </property>
        <property name="defaultFilterChainDefinitions">
            <value>
                /common/pic/code=anon
            	/common/solr/ext=anon
            	/favicon.ico=anon
            	/common/login=security
            	/common/logout=logout
            	/resource/**=anon
            	/product/*.js=anon
            	/brand/*.js=anon
            	/**=user
            </value>
        </property>
    </bean>
    
   <!--  Shiro的Web过滤器  -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
    <property name="securityManager" ref="securityManager"/>
  <!--    <property name="loginUrl" value="/common/login"/>
        <property name="filters">
            <util:map>
                <entry key="security" value-ref="securityFilter"/>
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
            	/common/pic/code=anon
            	/common/solr/ext=anon
            	/favicon.ico=anon
            	/common/login=security
            	/common/logout=logout
            	/resource/**=anon
            	/product/*.js=anon
            	/brand/*.js=anon
            	/**=user
            </value>
        </property> -->
        
    </bean>
    
    <bean id="filterChainResolver" class="com.zl.component.shiro.chain.CustomPathMatchingFilterChainResolver">
        <property name="customDefaultFilterChainManager" ref="filterChainManager"/>
    </bean>
	
	
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="shiroFilter"/>
        <property name="targetMethod" value="setFilterChainResolver"/>
        <property name="arguments" ref="filterChainResolver"/>
    </bean>
    
    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans>